FEATURES:
Maxima-backend:
- improve tab completion (ATM it's only a static list of known functions)
Sage-backend:
- Handle additional input requests in Sage Backend
R-Backend:
- complete it
 - add custom Result types for DataFrames etc. (nice html tables instead of AsciiArt)
General:
- MathML rendering
- add help browser 
- improve help/documentation/usability all over the place
- review and cleanup API
- Extension infrastructure(backend-specific or using extensions), e.g. to provide variable inspection
- Add a console, where the user can interact directly with the underlying process (unsing infrastructure from above?)
- scripted plugins/assistants (with GHNS integration)
- embedding of the windows brought up by clients
- add way to show disabled backends, and reason why they are disabled
- export to latex
- add an about-backend dialog
- add gui option to configure latex path. hide typesetting option if LaTex is not available
- add context menu to entries, e.g. for evaluating, removing, inserting

- improve tab-completion:
   "I'd like to see completion with "real" CompletionItems, like in Kate, with an ::execute() method
   this would make it possible to e.g. complete functions directly with the ()
   or at least some way to mark "this is a function, complete it so that () is appended and the cursor should be inside the parens)"
- Don't hardcode Tab-key for completions (and rename TabCompletion-classes)
- Group Actions in Settings menu, so its clear (e.g. in the Shortcut-dialog) that theyre settings

BACKENDS:
- Octave backend
- SciPy backend
- scilab backend?

ASSISTANTS:
- look what others offer as assistant and clone it

OTHER:
/ write documentation
- complete apidox
- write tutorial on howto implement backends/assistants
